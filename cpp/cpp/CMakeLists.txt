cmake_minimum_required(VERSION 3.5)

project(grpc++_sample)

find_package(PkgConfig REQUIRED)
pkg_check_modules(grpc++ REQUIRED grpc++)

find_package(Protobuf REQUIRED)
set(PROTO_FILES
  ./proto/object.proto
)
protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${PROTO_FILES})

set(GRPC_HDRS
  ${PROJECT_BINARY_DIR}/object.grpc.pb.h
)
set(GRPC_SRCS
  ${PROJECT_BINARY_DIR}/object.grpc.pb.cc
)
add_custom_command(
  OUTPUT "${GRPC_SRCS}" "${GRPC_HDRS}"
  COMMAND protoc
  ARGS -I${PROJECT_SOURCE_DIR}/proto --grpc_out=${PROJECT_BINARY_DIR} --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` ${PROJECT_SOURCE_DIR}/proto/*.proto
)

include_directories(
  ${PROJECT_BINARY_DIR} # Adding the path to files generated by protoc
  ${Protobuf_INCLUDE_DIRS}
  ${grpc++_INCLUDE_DIRS}
)

add_executable(server src/server.cpp ${PROTO_SRCS} ${GRPC_SRCS})
target_link_libraries(server
  ${grpc++_LIBRARIES}
  grpc++_reflection
  ${Protobuf_LIBRARIES}
)

add_executable(client src/client.cpp ${PROTO_SRCS} ${GRPC_SRCS})
target_link_libraries(client
  ${grpc++_LIBRARIES}
  ${Protobuf_LIBRARIES}
)

install(
  TARGETS
    server
    client
  RUNTIME
  DESTINATION
    bin
)
